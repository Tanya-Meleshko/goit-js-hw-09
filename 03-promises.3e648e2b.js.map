{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAaC,SAASC,cAAc,uBACpCC,EAAaF,SAASC,cAAc,sBACpCE,EAAcH,SAASC,cAAc,wBAqB3C,SAASG,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IA7BWN,SAASC,cAAc,UAE/BY,iBAAiB,SAE3B,SAA6BC,GAC3BA,EAAMC,iBAGN,IAFA,IAAIC,EAAQC,OAAOlB,EAAWmB,OACxBC,EAAOF,OAAOf,EAAWgB,OACtBE,EAAI,EAAGA,EAAIjB,EAAYe,MAAOE,IACrChB,EAAcgB,EAAI,EAAGJ,GAClBK,MAAK,SAAAC,G,IAAGjB,EAAQiB,EAARjB,SAAUC,EAAKgB,EAALhB,MACjBiB,EAAA1B,GAAS2B,OAAOC,QAAQ,qBAAoCC,OAAfrB,EAAS,QAAYqB,OAANpB,EAAM,M,IAEnEqB,OAAM,SAAAL,G,IAAGjB,EAAQiB,EAARjB,SAAUC,EAAKgB,EAALhB,MAClBiB,EAAA1B,GAAS2B,OAAOI,QAAQ,oBAAmCF,OAAfrB,EAAS,QAAYqB,OAANpB,EAAM,M,IAErEU,GAASG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst delayInput = document.querySelector('input[name=\"delay\"]');\nconst stepsInput = document.querySelector('input[name=\"step\"]');\nconst amountInput = document.querySelector('input[name=\"amount\"]');\nconst submitBtn = document.querySelector('button');\n\nsubmitBtn.addEventListener('click', onSubmitButtonClick);\n\nfunction onSubmitButtonClick(event) {\n  event.preventDefault();\n  let delay = Number(delayInput.value);\n  const step = Number(stepsInput.value);\n  for (let i = 0; i < amountInput.value; i++) {\n    createPromise(i + 1, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      });\n    delay += step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$delayInput","document","querySelector","$ce04d3a99e08e73b$var$stepsInput","$ce04d3a99e08e73b$var$amountInput","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","event","preventDefault","delay1","Number","value","step","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.3e648e2b.js.map"}